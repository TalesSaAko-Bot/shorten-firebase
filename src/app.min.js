class Shorten{constructor(b,a=!0){if(!b)throw new Error('Hoped to find a definition for "firebase". (11)');!1!==a&& !0!==a&&(a=!0),!0===a&&console.log("Shorten-Firebase v2.0.0 inicializado. (1)"),this.database=b.database()}async set(b,a){if(!b||!a||"object"!=typeof a)throw new Error("Hoped to find a reference and an value [object] (12). Check the documentation.");this.database.ref(b).update(a)}async update(a,b){this.set(a,b)}async add(a,b,c){if(!a||!b||!c||"string"!=typeof a||"string"!=typeof b||"number"!=typeof c)throw new Error("Hoped to find a reference, a property and a value (13). Check the documentation.");this.database.ref(a).once("value").then(async d=>{if(d.exists()){let e=d.val()[b]?d.val()[b]:0,f={[b]:e+c};this.database.ref(a).update(f)}else{let g={[b]:c};this.database.ref(a).update(g)}})}async delete(a){if(!a||"string"!=typeof a)throw new Error("Hoped to find a reference (14). Check the documentation.");this.database.ref(a).remove()}async erase(a){this.delete(a)}async get(a){if(!a||"string"!=typeof a)throw new Error("Hoped to find a reference (14). Check the documentation.");var b=null;return await this.database.ref(a).once("value").then(a=>{b=a.val()&&a.val()?a.val():null}),Promise.resolve(b).then(a=>a)}async getAllData(){var a=null;return await this.database.ref("/").once("value").then(b=>{a=b.val()&&b.val()?b.val():null}),Promise.resolve(a).then(a=>a)}async search(a,b){if(!a|| !b&&"string"!=typeof a&&"string"!=typeof b)throw new Error("Hoped to find a reference (14). Check the documentation.");var c=null;return await this.database.ref(a).once("value").then(a=>{c=a.val()&&a.val()[b]?a.val()[b]:null}),Promise.resolve(c).then(a=>a)}async latency(){let a=Date.now();return Math.round(await this.database.ref("shorten-firebase").once("value").then(()=>Date.now()-a))}async ping(){this.latency()}}
